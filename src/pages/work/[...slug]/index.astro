---
import BaseLayout from "@/components/layouts/Base.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import Container from "./_components/Container.astro";
import Aside from "./_components/Aside.astro";
import Article from "./_components/Article.astro";
import Toc from "@/components/document/Toc.astro";
import Link from "@/components/ui/Link.astro";
import MdContets from "@/components/document/MdContents.astro";
import FooterNav from "@/components/document/FooterNav.astro";
import Line from "@/components/ui/Line.astro";

export async function getStaticPaths() {
  const works = await getCollection("works");
  const sortedWorks = works.sort((a, b) => {
    return b.data.createdAt.getTime() - a.data.createdAt.getTime();
  });
  return sortedWorks.map((work, i) => ({
    params: { slug: work.slug },
    props: {
      ...work,
      prev: sortedWorks[i + 1] || null,
      next: sortedWorks[i - 1] || null,
    },
  }));
}

type Props = CollectionEntry<"works"> & {
  prev: CollectionEntry<"works"> | null;
  next: CollectionEntry<"works"> | null;
};

const {
  data: { title, description, createdAt },
  prev,
  next,
  slug,
  render,
} = Astro.props;

const { Content, headings } = await render();

const makeWorksNav = (entry: CollectionEntry<"works"> | null) => {
  if (!entry) return undefined;
  return {
    title: entry.data.title,
    link: `/work/${entry.slug}`,
  };
};
---

<BaseLayout title={title} description={description}>
  <Container>
    <Aside position="left">
      <Link href="/work">‚Üê Back</Link>
      <Toc headings={headings} />
    </Aside>
    <Article slug={slug} title={title} createdAt={createdAt}>
      <MdContets>
        <Content />
      </MdContets>
      <Line />
      <FooterNav prev={makeWorksNav(prev)} next={makeWorksNav(next)} />
    </Article>
    <Aside position="right" />
  </Container>
</BaseLayout>
