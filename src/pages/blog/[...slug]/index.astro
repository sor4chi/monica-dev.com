---
import BaseLayout from "@/components/layouts/Base.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import Container from "./_components/Container.astro";
import Aside from "./_components/Aside.astro";
import Article from "./_components/Article.astro";
import Toc from "@/components/document/Toc.astro";
import Link from "@/components/ui/Link.astro";
import MdContets from "@/components/document/MdContents.astro";
import FooterNav from "@/components/document/FooterNav.astro";
import Line from "@/components/ui/Line.astro";

export async function getStaticPaths() {
  const blogs = await getCollection("originalBlogs");
  const sortedBlogs = blogs.sort((a, b) => {
    return b.data.publishedAt.getTime() - a.data.publishedAt.getTime();
  });

  return blogs.map((blog, i) => ({
    params: { slug: blog.slug },
    props: {
      ...blog,
      prev: sortedBlogs[i + 1] || null,
      next: sortedBlogs[i - 1] || null,
    },
  }));
}
type Props = CollectionEntry<"originalBlogs"> & {
  prev: CollectionEntry<"originalBlogs"> | null;
  next: CollectionEntry<"originalBlogs"> | null;
};

const {
  data: { title, description, publishedAt, updatedAt },
  slug,
  render,
  prev,
  next,
} = Astro.props;
const { Content, headings } = await render();

const makeBlogNav = (blog: CollectionEntry<"originalBlogs"> | null) => {
  if (!blog) return undefined;
  return {
    title: blog.data.title,
    link: `/blog/${blog.slug}`,
  };
};
---

<BaseLayout title={title} description={description}>
  <Container>
    <Aside position="left">
      <Link href="/blog">‚Üê Back</Link>
      <Toc headings={headings} />
    </Aside>
    <Article
      slug={slug}
      title={title}
      publishedAt={publishedAt}
      updatedAt={updatedAt}
    >
      <MdContets>
        <Content />
      </MdContets>
      <Line />
      <FooterNav prev={makeBlogNav(prev)} next={makeBlogNav(next)} />
    </Article>
    <Aside position="right" />
  </Container>
</BaseLayout>
