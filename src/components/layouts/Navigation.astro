---
import clsx from "clsx";
import Link from "../ui/Link.astro";
import { styles } from "./Navigation.css";

const NAV_LINKS = [
  { href: "/", label: "Home" },
  { href: "/work", label: "Works" },
  { href: "/timeline", label: "Timeline" },
  { href: "/blog", label: "Blogs" },
] as const;

export type NavKinds = (typeof NAV_LINKS)[number]["href"];

interface Props {
  active: NavKinds;
}

const { active } = Astro.props;
---

<div class={styles.backward} id="backward">
  {
    NAV_LINKS.map(({ href, label }) => (
      <Link
        href={href}
        exClass={clsx("backward-internal-link", styles.link, {
          [styles.active]: href === active,
        })}
      >
        {href === active && <span class={styles.activeDot} />}
        {label}
      </Link>
    ))
  }
  <hr class={styles.line} />
  <div class={styles.social}>
    <Link href="https://x.com/sor4chi" ariaLabel="Twitter / X を開く">
      <svg
        viewBox="0 0 1200 1227"
        xmlns="http://www.w3.org/2000/svg"
        class={styles.icon}
        fill="currentColor"
      >
        <path
          d="m714.163 519.284 446.727-519.284h-105.86l-387.893 450.887-309.809-450.887h-357.328l468.492 681.821-468.492 544.549h105.866l409.625-476.152 327.181 476.152h357.328l-485.863-707.086zm-144.998 168.544-47.468-67.894-377.686-540.2396h162.604l304.797 435.9906 47.468 67.894 396.2 566.721h-162.604l-323.311-462.446z"
        >
        </path>
      </svg>
    </Link>
    <Link href="https://github.com/sor4chi" ariaLabel="Githubを開く">
      <svg
        viewBox="0 0 98 96"
        xmlns="http://www.w3.org/2000/svg"
        class={styles.icon}
        fill="currentColor"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z"
        >
        </path>
      </svg>
    </Link>
  </div>
</div>

<script>
  import { navigate } from "astro:transitions/client";

  const initNavigation = () => {
    const navigationToggle = document.querySelector("#navigation-toggle");
    const main = document.querySelector("main");
    const backward = document.querySelector("#backward");

    if (!navigationToggle || !main || !backward) return;

    let isAnimating = false;

    navigationToggle.addEventListener("click", () => {
      if (!isAnimating) {
        navigationToggle.classList.toggle("is-active");
        main.classList.toggle("is-active");

        if (backward.classList.contains("is-active")) {
          backward.classList.remove("is-active");
          setTimeout(() => {
            backward.classList.remove("is-visibility-active");
            isAnimating = false;
          }, 300);
        } else {
          backward.classList.add("is-visibility-active");

          setTimeout(() => {
            backward.classList.add("is-active");
            isAnimating = false;
          }, 300);
        }
      }

      isAnimating = true;
    });

    const links = document.querySelectorAll(".backward-internal-link");
    links.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        backward.classList.remove("is-active");
        navigationToggle.classList.remove("is-active");
        main.classList.remove("is-active");

        setTimeout(() => {
          // @ts-ignore
          navigate(link.href);
        }, 300);
      });
    });
  };

  initNavigation();

  document.addEventListener("astro:after-swap", () => {
    initNavigation();
  });
</script>
