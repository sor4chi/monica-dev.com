---
import { getCollection } from "astro:content";

import MdContents from "@/components/document/MdContents.astro";
import BaseLayout from "@/components/layouts/Base.astro";

import Item from "./_components/Item.astro";
import TimelineLayout from "./_components/TimelineLayout.astro";

const timelines = await getCollection("timelines");
const sortedTimelines = await Promise.all(
	timelines
		.sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
		.map(async (timeline) => ({
			...timeline,
			isBodyExist: !!timeline.body,
			content: await timeline.render(),
		})),
);
---

<BaseLayout title="Timelines" canonical="/timeline" active="/timeline">
  <TimelineLayout>
    {
      sortedTimelines.map((timeline) =>
        timeline.isBodyExist ? (
          <Item
            title={timeline.data.title}
            slug={timeline.slug}
            date={timeline.data.date}
            icon={timeline.data.icon}
            link={timeline.data.link}
          >
            <MdContents>
              <timeline.content.Content />
            </MdContents>
          </Item>
        ) : (
          <Item
            title={timeline.data.title}
            slug={timeline.slug}
            date={timeline.data.date}
            icon={timeline.data.icon}
            link={timeline.data.link}
          />
        ),
      )
    }
  </TimelineLayout>
</BaseLayout>
